import logging
import states
from bank_accounts import *
from help_dispatch import send_to_start
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    ConversationHandler,
    CallbackContext,
)

logger = logging.getLogger(__name__)


def request(update: Update, context: CallbackContext) -> int:
    """Stores the selected gender and asks for a photo."""
    reply_keyboard = [['–î–µ—Å–Ω—è–Ω—Å—å–∫–∏–π'], ['–°–≤—è—Ç–æ—à–∏–Ω—Å—å–∫–∏–π'],
                       ['–î–Ω—ñ–ø—Ä–æ–≤—Å—å–∫–∏–π'], ['–ü–µ—á–µ—Ä—Å—å–∫–∏–π'],
                       ['–ì–æ–ª–æ—Å—ñ—ó–≤—Å—å–∫–∏–π'], ['–î–∞—Ä–Ω–∏—Ü—å–∫–∏–π'],
                       ['–°–æ–ª–æ–º—è–Ω—Å—å–∫–∏–π'], ['–û–±–æ–ª–æ–Ω—Å—å–∫–∏–π'],
                       ['–®–µ–≤—á–µ–Ω–∫—ñ–≤—Å—å–∫–∏–π'], ['–ü–æ–¥—ñ–ª—å—Å—å–∫–∏–π'],
                       ['‚ùå –í—ñ–¥–º—ñ–Ω–∞']
                       ]
    reply_keyboard_sup = [['üè¶ –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ / üè¶ Bank details'],
                      ['‚ùå –í—ñ–¥–º—ñ–Ω–∞ / ‚ùå Cancel'],
                      ]
    user = update.message.from_user
    text = update.message.text
    logger.info("Gender of %s: %s", user.first_name, text)
    if text == '/start' or '‚Ü©Ô∏è' in text:
        send_to_start(update)
        return states.REQUEST
    if 'üí™' in text:
        update.message.reply_text(
            '–û–±–µ—Ä—ñ—Ç—å —è–∫ –≤–∏ —Ö–æ—á–µ—Ç–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏ ‚§µÔ∏è / Select how you want to help ‚§µÔ∏è',
            reply_markup=ReplyKeyboardMarkup(
                reply_keyboard_sup, one_time_keyboard=True, resize_keyboard=True
            )
        )
        return states.DONATION
    update.message.reply_text(
        '–û–±–µ—Ä—ñ—Ç—å —Ä–∞–π–æ–Ω, –¥–µ '
        '–ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ ‚§µÔ∏è',
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True
        )
    )

    return states.REGION


def donate(update: Update, context: CallbackContext) -> int:
    reply_keyboard = [['üí≥ –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –≤ –≥—Ä–∏–≤–Ω—ñ ‚Ç¥ / bank details for donations in UAH üí∏'],
                      ['üí≥ –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –≤ —î–≤—Ä–æ ‚Ç¨ / bank details for donations in EUR üí∂'],
                      ['üí≥ –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –≤ –¥–æ–ª–∞—Ä—ñ / bank details for donations in USD üíµ'],
                      ['‚ùå –í—ñ–¥–º—ñ–Ω–∞ / ‚ùå Cancel'],
                      ]
    text = update.message.text
    if text == '‚ùå –í—ñ–¥–º—ñ–Ω–∞' or text == '/start':
        send_to_start(update)
        return states.REQUEST
    update.message.reply_text(
        '–û–±–∏—Ä–∞–π—Ç–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ ‚§µÔ∏è / Select ‚§µÔ∏è',
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True
        )
    )
    return states.ACCOUNT


def bank_account(update: Update, context: CallbackContext) -> int:
    reply_keyboard = [
                      ['‚Ü©Ô∏è –ù–∞–∑–∞–¥ / ‚Ü©Ô∏è Return'],
                      ]
    text = update.message.text
    if text == '‚ùå –í—ñ–¥–º—ñ–Ω–∞' or text == '/start':
        send_to_start(update)
        return states.REQUEST
    if 'UAH' in text:
        update.message.reply_text(
            uah_bank,
            reply_markup=ReplyKeyboardMarkup(
                reply_keyboard, one_time_keyboard=True, resize_keyboard=True
            )
        )
    elif 'USD' in text:
        update.message.reply_text(
            usd_bank,
            reply_markup=ReplyKeyboardMarkup(
                reply_keyboard, one_time_keyboard=True, resize_keyboard=True
            )
        )
    elif 'EUR' in text:
        update.message.reply_text(
            eur_bank,
            reply_markup=ReplyKeyboardMarkup(
                reply_keyboard, one_time_keyboard=True, resize_keyboard=True
            )
        )
    return states.REQUEST

