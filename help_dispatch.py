import logging
import states
import google_sheets
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (
    Updater,
    CommandHandler,
    MessageHandler,
    Filters,
    ConversationHandler,
    CallbackContext,
)
sheets = google_sheets.Sheets("Sheet1")
logger = logging.getLogger(__name__)


def send_again(update: Update):
    update.message.reply_text(
        '–î–∞–Ω—ñ –±—É–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ. '
        '–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ç–∞ –ù–∞–ø–∏—à—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —â–µ —Ä–∞–∑ '
        'üôè‚§µÔ∏è'
        # reply_markup=ReplyKeyboardMarkup(
        #     reply_keyboard, one_time_keyboard=True, resize_keyboard=True
        # )
    )

def send_to_start(update: Update):
    reply_keyboard = [['‚úã –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞']]

    update.message.reply_text(
        '–û–±–∏—Ä–∞–π—Ç–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ ‚§µÔ∏è',
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True
        )
    )


def region(update: Update, context: CallbackContext) -> int:
    """Stores the selected gender and asks for a photo."""
    # reply_keyboard = [['–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –∞–≤—Ç–æ–≤–æ–ª–æ–Ω—Ç–µ—Ä–∏'],
    #                   ['–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ —Ä–µ—á—ñ –¥–ª—è –∑–∞—Ö–∏—Å–Ω–∏–∫—ñ–≤'],
    #                   ['–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ª—ñ–∫–∏ / –∑–∞—Å–æ–±–∏ –≥—ñ–≥—ñ—î–Ω–∏'],
    #                   ['–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ –≤–æ–ª–æ–Ω—Ç–µ—Ä—ñ–≤ —Ä—É–∫–∞–º–∏'],
    #                   ['–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –≥—É–º–∞–Ω—ñ—Ç–∞—Ä–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ (—ó–∂–∞, —Ä–µ—á—ñ)'],
    #                   ['–ú–æ–≥–æ –∑–∞–ø–∏—Ç—É –Ω–µ–º–∞—î –≤ —Å–ø–∏—Å–∫—É']
    #                   ]
    reply_keyboard = [['‚ùå –í—ñ–¥–º—ñ–Ω–∞']]
    user = update.message.from_user
    logger.info("Gender of %s: %s", user.first_name, update.message.text)
    update.message.reply_text(
        '–ù–∞–ø–∏—à—ñ—Ç—å —è–∫–∞ '
        '–¥–æ–ø–æ–º–æ–≥–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∞ ‚§µÔ∏è',
         reply_markup=ReplyKeyboardMarkup(
             reply_keyboard, one_time_keyboard=True, resize_keyboard=True
        )
    )

    return states.HELP


def help(update: Update, context: CallbackContext) -> int:
    """Stores the selected gender and asks for a photo."""
    reply_keyboard = [['‚ùå –í—ñ–¥–º—ñ–Ω–∞']]
    text = update.message.text
    if text == '‚ùå –í—ñ–¥–º—ñ–Ω–∞':
        send_to_start(update)
        return states.REQUEST
    sheets.add_help_info(text)
    logger.info("Text is: %s", text)
    update.message.reply_text(
        '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à–µ —ñ–º º—è '
        '—Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ ‚§µÔ∏è',
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True
        )
    )

    return states.NAME


def name(update: Update, context: CallbackContext) -> int:
    """Stores the selected gender and asks for a photo."""
    reply_keyboard = [['‚ùå –í—ñ–¥–º—ñ–Ω–∞']]
    print(context.chat_data)
    text = update.message.text
    if text == '‚ùå –í—ñ–¥–º—ñ–Ω–∞':
        send_to_start(update)
        return states.REQUEST
    if sheets.validate_name(text) is None:
        send_again(update)
        return states.NAME
    logger.info("Text is: %s", text)
    sheets.add_name(update.message.text)
    update.message.reply_text(
        '–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä '
        '—Ç–µ–ª–µ—Ñ–æ–Ω—É ‚§µÔ∏è',
        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True
        )
    )

    return states.PHONE

def phone(update: Update, context: CallbackContext) -> int:
    """Stores the selected gender and asks for a photo."""
    reply_keyboard = [['‚ùå –í—ñ–¥–º—ñ–Ω–∞']]
    text = update.message.text
    if text == '‚ùå –í—ñ–¥–º—ñ–Ω–∞':
        send_to_start(update)
        return states.REQUEST
    if sheets.validate_phone(text) is None:
        send_again(update)
        return states.PHONE
    logger.info("Text is: %s", text)
    sheets.add_phone(update.message.text)
    update.message.reply_text(
        '–ù–∞–ø–∏—à—ñ—Ç—å –∞–¥—Ä–µ—Å—É, –¥–µ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ ‚§µÔ∏è',

        reply_markup=ReplyKeyboardMarkup(
            reply_keyboard, one_time_keyboard=True, resize_keyboard=True
        )
    )

    return states.ADDRESS


def address(update: Update, context: CallbackContext) -> int:
    """Stores the selected gender and asks for a photo."""
    text = update.message.text
    if text == '‚ùå –í—ñ–¥–º—ñ–Ω–∞':
        send_to_start(update)
        return states.REQUEST
    if sheets.validate_address(text) is None:
        send_again(update)
        return states.ADDRESS
    logger.info("Text is: %s", text)
    sheets.add_address(update.message.text)
    update.message.reply_text(
        """–ú–∏ –∑–∞–ø–∏—Å–∞–ª–∏ –≤–∞—à–µ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è.
    –ó–∞—á–µ–∫–∞–π—Ç–µ –Ω–∞ –¥–∑–≤—ñ–Ω–æ–∫, –±—É–¥—å –ª–∞—Å–∫–∞.
    –ü–æ—Å—Ç–∞—Ä–∞—î–º–æ—Å—å –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º —è–∫–æ–º–æ–≥–∞ —Å–∫–æ—Ä—ñ—à–µ üôè""",

        # reply_markup=ReplyKeyboardMarkup(
        #     reply_keyboard, one_time_keyboard=True, resize_keyboard=True
        # )

    )
    return ConversationHandler.END